-- Generated by Oracle SQL Developer Data Modeler 20.2.0.167.1538
--   at:        2021-04-15 16:11:50 NZST
--   site:      Oracle Database 12cR2
--   type:      Oracle Database 12cR2



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE
DROP TABLE attendance CASCADE CONSTRAINTS;
DROP TABLE concession CASCADE CONSTRAINTS;
DROP TABLE concessionfee CASCADE CONSTRAINTS;
DROP TABLE customer CASCADE CONSTRAINTS;
DROP TABLE instructor CASCADE CONSTRAINTS;
DROP TABLE paymenttype CASCADE CONSTRAINTS;
DROP TABLE salary CASCADE CONSTRAINTS;


CREATE TABLE attendance (
    atten_id                  CHAR(20) NOT NULL,
    atten_sessiondate         DATE,
    customer_cust_id          CHAR(20) NOT NULL,
    instructor_in_id          CHAR(20 CHAR) NOT NULL,
    paymenttype_p_payment_id  VARCHAR2(20)
);

ALTER TABLE attendance ADD CONSTRAINT attendance_pk PRIMARY KEY ( atten_id,
                                                                  customer_cust_id );

CREATE TABLE concession (
    c_concession_id           VARCHAR2(20) NOT NULL,
    c_concessiontype          VARCHAR2(20) DEFAULT 10,
    c_purchasedate            DATE DEFAULT (sysdate),
    c_expiredate              DATE DEFAULT (sysdate + 365),
    c_paymentamount           CHAR(20),
    c_discount                CHAR(20),
    customer_cust_id          CHAR(20),
    concessionfee_feeid       VARCHAR2(20),
    paymenttype_p_payment_id  VARCHAR2(20)
);

ALTER TABLE concession ADD CONSTRAINT concession_pk PRIMARY KEY ( c_concession_id );

CREATE TABLE concessionfee (
    feeid      VARCHAR2(20) NOT NULL,
    feeamount  VARCHAR2(20) DEFAULT 5 CHECK (feeamount >=5), --amount is default 5 at the moment, can be greater than $5 in future 
    active     VARCHAR2(20)
);

ALTER TABLE concessionfee ADD CONSTRAINT concessionfee_pk PRIMARY KEY ( feeid );

CREATE TABLE customer (
    cust_id      CHAR(20) NOT NULL,
    cust_fname   VARCHAR2(20),
    cust_lname   VARCHAR2(20),
    cust_phone   NUMBER,
    cust_email   VARCHAR2(20),
    cust_gender  VARCHAR2(1) CHECK (cust_gender IN ('M', 'F'))
);

ALTER TABLE customer ADD CONSTRAINT customer_pk PRIMARY KEY ( cust_id );

CREATE TABLE instructor (
    
    in_id             CHAR(20 CHAR) NOT NULL,
    in_fname          VARCHAR2(20),
    in_lname          VARCHAR2(20),
    in_gender         VARCHAR2(1) CHECK (in_gender IN ('M', 'F')),
    in_phone          NUMBER,
    in_email          VARCHAR2(20),
    in_bankaccount    VARCHAR2(20),
    salary_salary_id  VARCHAR2(20)
);

ALTER TABLE instructor ADD CONSTRAINT instructor_pk PRIMARY KEY ( in_id );

CREATE TABLE paymenttype (
    p_payment_id   VARCHAR2(20) NOT NULL,
    p_paytypename  VARCHAR2(20) CHECK (p_paytypename IN ('Eftpos','Cash','Paypal')),
    p_status       VARCHAR2(20)
);

ALTER TABLE paymenttype ADD CONSTRAINT paymenttype_pk PRIMARY KEY ( p_payment_id );

CREATE TABLE salary (
    salary_id          VARCHAR2(20) NOT NULL,
    salary_hourlyrate  CHAR(20)
);

ALTER TABLE salary ADD CONSTRAINT salary_pk PRIMARY KEY ( salary_id );

ALTER TABLE attendance
    ADD CONSTRAINT attendance_customer_fk FOREIGN KEY ( customer_cust_id )
        REFERENCES customer ( cust_id );

ALTER TABLE attendance
    ADD CONSTRAINT attendance_instructor_fk FOREIGN KEY ( instructor_in_id )
        REFERENCES instructor ( in_id );

ALTER TABLE attendance
    ADD CONSTRAINT attendance_paymenttype_fk FOREIGN KEY ( paymenttype_p_payment_id )
        REFERENCES paymenttype ( p_payment_id );

ALTER TABLE concession
    ADD CONSTRAINT concession_concessionfee_fk FOREIGN KEY ( concessionfee_feeid )
        REFERENCES concessionfee ( feeid );

ALTER TABLE concession
    ADD CONSTRAINT concession_customer_fk FOREIGN KEY ( customer_cust_id )
        REFERENCES customer ( cust_id );

ALTER TABLE concession
    ADD CONSTRAINT concession_paymenttype_fk FOREIGN KEY ( paymenttype_p_payment_id )
        REFERENCES paymenttype ( p_payment_id );

ALTER TABLE instructor
    ADD CONSTRAINT instructor_salary_fk FOREIGN KEY ( salary_salary_id )
        REFERENCES salary ( salary_id );

--Examples shown for inserting data 
--Insert into Customer table 
INSERT INTO customer (cust_id, cust_fname, cust_lname, cust_phone, cust_email, cust_gender) VALUES ('01', 'John', 'Smith', 022022123, 'johnsmith@gmail.com', 'M');
--Insert into Salary 
INSERT INTO salary (salary_id, salary_hourlyrate) VALUES ('A1', '22.0');
--Insert into Instructor Table
INSERT INTO instructor (in_id, in_fname, in_lname, in_gender, in_phone, in_email, in_bankaccount, salary_salary_id) VALUES ('111', 'Jack', 'William', 'M', 0211223344, 'jackwill@gmail.com', '0011000123400', 'A1');
--Insert into Payment Type Table 
INSERT INTO paymenttype (p_payment_id, p_paytypename, p_status) VALUES ('PAY1', 'Eftpos', 'Active'); 
--Insert into Concession Fee Table 
INSERT INTO concessionfee (feeid, feeamount, active) VALUES ('FEE1', '5', 'Yes'); 
--Insert Concession Table 
INSERT INTO concession (c_concession_id, c_concessiontype, c_purchasedate, c_expiredate, c_paymentamount, c_discount, customer_cust_id, concessionfee_feeid, paymenttype_p_payment_id) VALUES ('CON01', '10', '11/01/2021', '11/01/2022', '50', 'No discount', '01', 'FEE1', 'PAY1');
--Insert into Attendance Table 
INSERT INTO attendance (atten_id, atten_sessiondate, customer_cust_id, instructor_in_id, paymenttype_p_payment_id) VALUES ('ATTEN01', '12/01/2021', '01', '111', 'PAY1');


--Show Output
SELECT * FROM customer;
SELECT * FROM instructor;
SELECT * FROM attendance;
SELECT * FROM concession;
SELECT * FROM concessionfee;
SELECT * FROM paymenttype;
SELECT * FROM salary;
-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             7
-- CREATE INDEX                             0
-- ALTER TABLE                             14
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0